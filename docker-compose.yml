version: '3.4'

services:

  frontend-api-lb:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend-api
    ports:
      - "5000:5000"
    networks: 
      - backend
      
  frontend-api:
    image: demo365.api
    environment:
      REPOSITORY_URL: 'http://internal-api-lb:5100'
    #ports:
    #  - "5200:80"
    expose:
      - "80"
    depends_on:
      - repository-api
    networks: 
      - backend

  fakesource-loader:
    image: demo365.fakesource
    environment:
      REPOSITORY_URL: 'http://internal-api-lb:5100'
      KAFKA_CONNECTION: 'kafka:9092'
      KAFKA_TOPIC: 'demo365_repository_insert'
      ASYNC: 'false'
    depends_on:
      - repository-api
      #- kafka
    networks: 
      - backend

  internal-api-lb:
    image: nginx:latest
    volumes:
      - ./nginx-internal.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - repository-api
    #expose: 
    #  - "5100"
    ports:
      - "5100:5100"
    networks: 
      - backend
      
  repository-api:
    image: demo365.repository
    environment:
      DB_CONNECTION: 'Data Source=repository-db;Database=demo365;User Id=root;Password=Demo365!;SSL Mode=None'
      KAFKA_CONNECTION: 'kafka:9092'
      KAFKA_TOPIC: 'demo365_repository_insert'
    expose:
      - "80"
    depends_on:
      - repository-db
      #- kafka
    networks: 
      - backend

  repository-db:
    image: demo365.repository.db
    restart: always
    environment:
      MYSQL_DATABASE: 'demo365'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'Demo365!'
      MYSQL_ROOT_PASSWORD: 'Demo365!'
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - data:/var/lib/mysql
    networks: 
      - backend
      
  # zookeeper:
    # image: confluentinc/cp-zookeeper:latest
    # environment:
      # ZOOKEEPER_CLIENT_PORT: 2181
      # ZOOKEEPER_TICK_TIME: 2000
    # ports:
      # - 2181:2181
    # networks: 
      # - backend

  # kafka:
    # image: confluentinc/cp-kafka:latest
    # depends_on:
      # - zookeeper
    # ports:
      # - 9092:9092
    # environment:
      # KAFKA_BROKER_ID: 1
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      
      # KAFKA_CREATE_TOPICS: "demo365_repository_insert:1:1"      
    # networks: 
      # - backend
      
volumes:
  data: 
  
networks:
  backend:
    driver: "bridge"      
